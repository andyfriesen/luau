
def build_one(ctx, target: "target_set", result):
    if not len(target):
        return
    cquery = ctx.cquery()

    db = [configured_sub_target(r.label, "compilation-database") for r in target]
    result.extend(db)

    ctx.build(
        labels=db,
        target_platform=ctx.cli_args.target_platform,
    )

    for d in target:
        deps = cquery.deps(d)
        libtargets = cquery.kind('cxx_library|cxx_binary', deps) - target
        if libtargets:
            build_one(ctx, libtargets, result)

def _compdb_impl(ctx):
    cquery = ctx.cquery()
    ctarget = cquery.eval(ctx.cli_args.target)

    result = []
    build_one(ctx, ctarget, result)

    for r in result:
        print('\t', r)

compdb = bxl(
    impl=_compdb_impl,
    cli_args= {
        "target": cli_args.string(),
        "target_platform": cli_args.option(cli_args.target_label()),
    }
)
